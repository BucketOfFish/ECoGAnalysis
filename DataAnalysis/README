Contents of DimensionalityReduction/:

Notebooks (with plots) from data decomposition investigations.

-----------------------------------

Contents of Plotting/:

plotEventsAndAverages.py plots ECoG data in 2D color plots (channels vs. time steps), also plotting the average ECoG signals for each phoneme.

channelSignificance.py plots the significance of each channel for each class. Also finds the best channels in terms of greatest discrimination power between classes.

Plots/ contains average signals in Averages/, as well as averages using only the best channels in ReducedAverages/.

-----------------------------------

Contents of Misc/:

UofICUR/ is code Jesse sent me for doing CUR decomposition in Matlab. I didn't end up using it.

ecog_neuro.py is Jesse and Kris's original code, used in their 2015 paper. It seems to be used just to split and label data, though I should ask Jesse to be sure. In particular, setting the number of folds results in the self.indices vector being calculated, but this does not appear to be used for anything.

Jesse's instructions on using ecog_neuro:

import ecog_neuro
d = ecog_neuro.ECoG('/data/ecog/hdf5/EC2_blocks_1_8_9_15_76_89_105_CV_HG_align_window_-0.5_to_0.79_file_nobaseline.h5', 'train', fold=0)
# ECoG data
print(d.X.shape)
# labels
print(d.y.shape)
# axis info
print(d.axes)

In place of 'train' you can also put 'valid' and 'test', and fold can be anything 0-9 (10 totals folds)
If you need to load stuff in matplot, you can probably just resave d.X and d.y for the different values of train/valid/test and 10 folds in a .mat file.
